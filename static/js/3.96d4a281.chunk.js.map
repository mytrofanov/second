{"version":3,"sources":["components/Profile/Posts/Post/Post.module.css","components/Profile/Posts/Posts.module.css","assets/images/mask.jpg","components/Profile/Posts/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/Posts/ProfileInfo/ProfileForm.jsx","components/Profile/Posts/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Profile/Posts/ProfileInfo/ProfileInfo.module.css"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","aboutStatus","onDoubleClick","isOwner","data-title","about","value","autoFocus","onChange","ev","currentTarget","onBlur","updateStatus","ProfileForm","profile","onSubmit","callEditMode","ProfileDataForm","useForm","register","handleSubmit","profileError","formState","errors","error","loginPage","form","placeholder","fullName","defaultValue","aboutMe","type","lookingForAJobDescription","Object","keys","contacts","map","key","divName","inputName","editProfile","onClick","ProfileData","lookingForAJob","contactTitle","contactValue","Contact","contact","ProfileInfo","savePhoto","saveProfileForm","mode","ava","photos","large","mask","container","alt","src","overlay","bigPen","e","target","files","length","data","Post","item","message","item__like","count","discount","window","Posts","React","memo","push","postsElements","posts","reverse","p","addPost","newPost","post","NewPostForm","required","maxLength","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.96d4a281.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1Z1Ru\",\"item__like\":\"Post_item__like__1-Om7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Posts_block__1QzJn\",\"post\":\"Posts_post__3XPuN\",\"content\":\"Posts_content__1XJTm\",\"hookForm\":\"Posts_hookForm__Cm5PY\"};","export default __webpack_public_path__ + \"static/media/mask.cef09c37.jpg\";","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        if (props.isOwner) {\r\n            setEditMode(true)\r\n        }\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (ev) => {\r\n        setStatus(ev.currentTarget.value)\r\n    }\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    return (\r\n        <div className={s.status}>\r\n            {!editMode &&\r\n            <div>\r\n                  <span className={s.aboutStatus}  onDoubleClick={activateEditMode} data-title=\"Double click for editing. Your account only\">Статус: &nbsp;\r\n                      {props.status||\"-------\"}  </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input className={s.about} value={status}\r\n                       autoFocus={true} onChange={onStatusChange}\r\n                       onBlur={deactivateEditMode}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\n\r\nexport const ProfileForm = ({profile, onSubmit, callEditMode}) => {\r\n\r\n\r\n    return <div>\r\n        <ProfileDataForm profile={profile} onSubmit={onSubmit} callEditMode={callEditMode}/>\r\n    </div>\r\n}\r\n\r\nexport const ProfileDataForm = ({onSubmit, profile, callEditMode}) => {\r\n\r\n    const inputCreator = (divName, inputName, placeholder) => {\r\n        return <div>\r\n            {divName} : <input {...register(inputName)} placeholder={placeholder} defaultValue={placeholder}/>\r\n\r\n        </div>\r\n    }\r\n\r\n    const {\r\n        register, handleSubmit,\r\n        formState: {errors}\r\n    } = useForm();\r\n\r\n\r\n    const profileError = profile.error;\r\n\r\n    return (\r\n        <div className={s.loginPage}>\r\n            <form className={s.form} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <div>\r\n                    <div>Имя: <input {...register(\"fullName\")} placeholder={profile.fullName}\r\n                                     defaultValue={profile.fullName}/></div>\r\n                    <div>Обо мне: <input {...register(\"aboutMe\")} placeholder={profile.aboutMe}\r\n                                         defaultValue={profile.aboutMe}/></div>\r\n                    <div>Ищу работу: <input {...register(\"lookingForAJob\")} type=\"checkbox\"/></div>\r\n                    <div>Мои навыки: <input {...register(\"lookingForAJobDescription\")}\r\n                                            placeholder={profile.lookingForAJobDescription}\r\n                                            defaultValue={profile.lookingForAJobDescription}/></div>\r\n                    <b>Контакты:</b>\r\n                    {Object.keys(profile.contacts).map(key => {\r\n                        return < div key={key}>\r\n                            {inputCreator(key, \"contacts.\" + key, profile.contacts[key])}\r\n                        < /div>\r\n                    })\r\n                    }\r\n                </div>\r\n\r\n                <input className={s.editProfile} type=\"submit\" value=\"💾 Save\"/>\r\n                <button className={s.editProfile} onClick={callEditMode}><b>↪</b> Вернуться без изменений</button>\r\n                <div className={s.profileError}>\r\n                    {profileError && profileError}\r\n                </div>\r\n\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../../common/preloader/preloader\";\r\nimport mask from \"./../../../../assets/images/mask.jpg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport {ProfileForm} from \"./ProfileForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfileForm, setEditMode, editMode}) => {\r\n\r\n    const callEditMode = (mode) => {\r\n        setEditMode(mode)\r\n    }\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const ava = !profile.photos.large ? mask : profile.photos.large;\r\n    //подставляю маску вместо аватарки если ее нет у юзера\r\n\r\n    const selectPhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (data) => {\r\n        saveProfileForm(data)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.ProfileInfo}>\r\n                <div className={s.container}>\r\n                    <img alt={\"ava\"} className={s.about} src={ava}/>\r\n                    {isOwner && <div className={s.overlay}>🖋</div>}\r\n                    {isOwner && <input type={\"file\"} className={s.bigPen} onChange={selectPhoto}/>}\r\n\r\n                </div>\r\n                <div className={s.status}>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus} isOwner={isOwner}/>\r\n                </div>\r\n                {editMode ? <ProfileForm profile={profile} onSubmit={onSubmit} callEditMode={() => {\r\n                        callEditMode(false)\r\n                    }}/> :\r\n                    <ProfileData profile={profile} isOwner={isOwner} setEditMode={() => {\r\n                        callEditMode(true)\r\n                    }}/>\r\n                }\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nconst ProfileData = ({profile, isOwner, setEditMode}) => {\r\n\r\n    return <div className={s.ProfileData}>\r\n        <div className={s.about}>\r\n            Имя: {profile.fullName}\r\n        </div>\r\n        <div className={s.about}>\r\n            О мне: {profile.aboutMe}\r\n        </div>\r\n        <div className={s.about}>\r\n            Ищу работу: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n\r\n            <div className={s.about}>\r\n                Professional skills: {profile.lookingForAJobDescription}</div>\r\n        </div>\r\n        <div>\r\n            <b>Контакты:</b>\r\n            {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })\r\n            }\r\n        </div>\r\n        {isOwner && <button className={s.editProfile} onClick={() => {\r\n            setEditMode(true)\r\n        }}> 🛠 Редактировать профиль</button>}\r\n        <div className={s.profileError}>\r\n            {profile.error && profile.error}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}>{contactTitle}: {contactValue}</div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                <img src='https://i.insider.com/5de2ca2b79d7577f925703f2?width=1124&format=jpeg'\r\n                alt={\"ava\"}/>\r\n                {props.message}\r\n            </div>\r\n            <div className={s.item__like}> {props.count} Like\r\n                <span>  {props.discount} Dislike</span>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './Posts.module.css'\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nwindow.props = [];\r\nconst Posts = React.memo(props => {\r\n\r\n\r\n    window.props.push(props);\r\n\r\n    let postsElements =\r\n        [...props.posts].reverse().map(p => <Post message={p.message} count={p.count} discount={p.discount}/>)\r\n\r\n    let addNewPost = (value) => {\r\n        props.addPost(value.newPost);\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <div>\r\n                <NewPostForm onSubmit={addNewPost}/>\r\n            </div>\r\n\r\n            <div className={s.post}> New Posts</div>\r\n\r\n            {postsElements}\r\n\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Posts;\r\n\r\n\r\nexport const NewPostForm = (props) => {\r\n\r\n    const {\r\n        register, handleSubmit,\r\n        formState: {errors}\r\n    } = useForm();\r\n    const onSubmit = data => props.onSubmit(data);\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <input {...register(\"newPost\", {required: true, maxLength: 30}\r\n            )} placeholder=\"enter your post\"/>\r\n            <input type=\"Submit\" value=\"Send Message\"/>\r\n            {errors?.newPost?.type === \"required\" && <span>This field is required</span>}\r\n            {errors?.newPost?.type === \"maxLength\" && (\r\n                <span>This field cannot exceed 30 characters</span>\r\n            )}\r\n        </form>\r\n    );\r\n}","import {addPostActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport Posts from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPost) => {\r\n            dispatch(addPostActionCreator(newPost));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./Posts/ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./Posts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         isOwner ={props.isOwner}\r\n                         savePhoto ={props.savePhoto}\r\n                         saveProfileForm={props.saveProfileForm}\r\n                         setEditMode={props.setEditMode}\r\n                         editMode={props.editMode}\r\n                        />\r\n            <MyPostsContainer  />\r\n\r\n        </div>)\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatus,\r\n    getUserProfile,\r\n    savePhoto,\r\n    saveProfileForm, setEditMode, updateStatus\r\n} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if ( this.props.match.params.userId !==  prevProps.match.params.userId)\r\n        {\r\n            this.refreshProfile();\r\n        }//если юзер меняется то обновляем компоненту profile\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     savePhoto={this.props.savePhoto}\r\n                     saveProfileForm={this.props.saveProfileForm}\r\n                     setEditMode={this.props.setEditMode}\r\n                     editMode={this.props.editMode}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    editMode:state.profilePage.editMode\r\n\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile, getStatus,\r\n        updateStatus, savePhoto, saveProfileForm, setEditMode\r\n    }),\r\n    withRouter\r\n)(ProfileContainer);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__1sTIE\",\"container\":\"ProfileInfo_container__Kgsjo\",\"post\":\"ProfileInfo_post__3LuEM\",\"block\":\"ProfileInfo_block__LPby2\",\"about\":\"ProfileInfo_about__2NwIA\",\"ProfileData\":\"ProfileInfo_ProfileData__1ANgo\",\"profileError\":\"ProfileInfo_profileError__2Eb3M\",\"editProfile\":\"ProfileInfo_editProfile__3Gc7q\",\"status\":\"ProfileInfo_status__2kigG\",\"aboutStatus\":\"ProfileInfo_aboutStatus__19thE\",\"contact\":\"ProfileInfo_contact__326AJ\",\"overlay\":\"ProfileInfo_overlay__2R4rV\",\"bigPen\":\"ProfileInfo_bigPen__lSlba\"};"],"sourceRoot":""}