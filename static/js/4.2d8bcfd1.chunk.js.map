{"version":3,"sources":["components/common/paginator/Paginator.module.css","components/Users/users.module.css","components/common/paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"names":["module","exports","Paginator","totalUsersCount","currentPage","pageSize","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","className","styles","paginator","pageNumber","onClick","event","totalPages","filter","p","map","selectedPage","nonSelectedPage","User","user","followingInProgress","unfollow","follow","to","id","src","photos","small","userPhoto","alt","usersPhoto","followed","disabled","some","userName","userBlock","name","status","Users","props","users","u","UsersContainer","getUsers","this","pageTitle","isFetching","React","Component","compose","connect","state","getPageSize","getCurrentPage","getIsFetching","getFollowingInProgress","requestUsers"],"mappings":"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","file":"static/js/4.2d8bcfd1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3uyOD\",\"pageNumber\":\"Paginator_pageNumber__aJHK5\",\"usersPhoto\":\"Paginator_usersPhoto__1NaPy\",\"selectedPage\":\"Paginator_selectedPage__1MCY5\",\"nonSelectedPage\":\"Paginator_nonSelectedPage__25DnA\",\"totalPages\":\"Paginator_totalPages__31zow\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"users_usersPhoto__28Ggf\",\"startAndEnd\":\"users_startAndEnd__1zH82\",\"userName\":\"users_userName__3toId\",\"userBlock\":\"users_userBlock__1qKiW\"};","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    pageSize: number\r\n    onPageChanged: (pageNumber:number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({\r\n                                          totalUsersCount, currentPage,\r\n                                          pageSize, onPageChanged, portionSize = 10\r\n                                      }) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / pageSize)\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        <div className={styles.pageNumber}>\r\n                        <span onClick={\r\n                            (event) => {\r\n                                onPageChanged(1);\r\n                                setPortionNumber(portionNumber = 1)\r\n                            }}\r\n                              className={styles.totalPages}> ⏮  </span>\r\n            {portionNumber > 1 && <span className={styles.totalPages}\r\n                                        onClick={() => {\r\n                                            setPortionNumber(portionNumber - 1)\r\n                                        }}>\r\n                ⏪</span>}\r\n            {pages.filter(p => p >= leftPortionNumber && p <= rightPortionNumber).map((p) => {\r\n                return <span className={p === currentPage ? styles.selectedPage : styles.nonSelectedPage}\r\n                             onClick={\r\n                                 (event) => {\r\n                                     onPageChanged(p);\r\n                                 }}> {p} </span>\r\n            })}\r\n\r\n            {portionCount > portionNumber && <span className={styles.totalPages}\r\n                                                   onClick={() => {\r\n                                                       setPortionNumber(portionNumber + 1)\r\n                                                   }}>\r\n                ⏩</span>}\r\n            <span\r\n                onClick={\r\n                    (event) => {\r\n                        onPageChanged(pagesCount);\r\n                        setPortionNumber(portionNumber = portionCount)\r\n                    }}\r\n                className={styles.totalPages}> ⏭   </span>\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UsersType} from \"../../types/Types\";\r\n\r\ntype UserPropsType = {\r\n    user: UsersType\r\n    followingInProgress: Array<number>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n\r\n}\r\n\r\nlet User:React.FC<UserPropsType> = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n        <span>\r\n            <div>\r\n\r\n                <NavLink to={'/profile/' + user.id}>\r\n                <img src={user.photos!.small != null ? user.photos!.small : userPhoto}\r\n                     alt={\"Users face is here\"} className={styles.usersPhoto}/>\r\n              </NavLink>\r\n            </div>\r\n            <div>\r\n\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  unfollow(user.id);\r\n                              }}>\r\n                        UnFollow</button>\r\n                    : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  follow(user.id);\r\n                              }}>\r\n                        Follow</button>}\r\n            </div>\r\n        </span>\r\n            <span>\r\n            <span className={styles.userName}>\r\n                <div className={styles.userBlock}>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n                    </div>\r\n            </span>\r\n\r\n        </span>\r\n        </div>)\r\n\r\n}\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport {UsersType} from \"../../types/Types\";\r\n\r\ntype PropsType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    users: Array<UsersType>\r\n    followingInProgress: Array<number>\r\n    onPageChanged: (pageNumber:number)=> void\r\n    unfollow: (userId:number)=> void\r\n    follow: (userId:number)=> void\r\n}\r\n\r\n\r\nlet Users: React.FC <PropsType> = ({currentPage, onPageChanged ,pageSize ,totalUsersCount ,...props}) => {\r\n    return <div>\r\n        <Paginator totalUsersCount={totalUsersCount} pageSize={pageSize}\r\n                   onPageChanged={onPageChanged} currentPage={currentPage}/>\r\n\r\n        {props.users.map(u =>\r\n            <User key={u.id}\r\n                  user={u}\r\n                  followingInProgress={props.followingInProgress}\r\n                  unfollow={props.unfollow}\r\n                  follow={props.follow}\r\n            />\r\n        )\r\n        }\r\n    </div>\r\n}\r\n\r\n// @ts-ignore\r\nexport default Users;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    unfollow, toggleFollowingProgress, requestUsers,\r\n} from \"../../Redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader/preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize, getUsers,\r\n    totalUsersCount\r\n} from \"../../Redux/usersSelectors\";\r\nimport {UsersMapStateToPropsType, UsersMapDispatchToPropsType, UsersOwnPropsType} from \"../../types/Types\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\n\r\n\r\n\r\ntype UsersPropsType = UsersMapStateToPropsType & UsersMapDispatchToPropsType & UsersOwnPropsType\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        let {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <h2>{this.props.pageTitle}</h2>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n\r\n        </>\r\n    }\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): UsersMapStateToPropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        totalUsersCount: totalUsersCount(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    // <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState>\r\n    connect<UsersMapStateToPropsType, UsersMapDispatchToPropsType, UsersOwnPropsType, AppStateType>(mapStateToProps,\r\n        {\r\n            follow, unfollow, getUsers: requestUsers\r\n        }),\r\n)(UsersContainer);\r\n"],"sourceRoot":""}